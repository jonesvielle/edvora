import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import InputComponent from "../components/textInputComponent";
import SelectInputComponent from "../components/selectComponent";
import ScrollbarComponent from "../components/scrollbarComponent";
import { useEffect } from "react";
// import { FetchData } from "./api/fetchProduct";
import { useState } from "react/cjs/react.development";
import Axios from "axios";
import _ from "lodash";

export default function Home() {
	const [data, setData] = useState([]);
	const [formattedData, setFormattedData] = useState([]);
	const [apiValues, setApiValues] = useState([]);
	const [selectedProduct, setSelectedProduct] = useState(0);
	const [statesArray, setStatesArray] = useState([]);
	const [rawData, setRawData] = useState([]);
	const [cityArray, setCityArray] = useState([]);
	const FetchData = () => {
		var config = {
			method: "get",
			url: "https://assessment-edvora.herokuapp.com",
			mode: "no-cors",
			headers: {},
		};

		Axios(config)
			.then(function (response) {
				console.log(JSON.stringify(response.data));
				setRawData(response.data);
				let apiData = _.groupBy(response.data, (c) => c.product_name);
				console.log(apiData);
				let arrayLength = Object.keys(apiData).length;
				console.log(Object.keys(apiData));
				console.log(Object.values(apiData));
				setFormattedData(Object.keys(apiData));
				setApiValues(Object.values(apiData));
				setData(apiData);
			})
			.catch(function (error) {
				console.log(error);
			});
	};
	useEffect(() => {
		FetchData();
	}, []);
	const handleOnChangeSelectStateInputComponent = (e) => {
		const farray = new Array();
		const farray1 = new Array();
		if (rawData.length > 0) {
			for (let i = 0; i < rawData.length; i++) {
				let temp = Object.values(rawData[i]);
				if (temp.includes(e.target.value)) {
					farray.push(temp[3].state);
					farray1.push(temp[3].city);
				}
			}
			let uniqueStates = [...new Set(farray)];
			let uniqueCities = [...new Set(farray1)];
			setStatesArray(uniqueStates);
			setCityArray(uniqueCities);
		}
	};

	const handleOnChangeSelectCityInputComponent = (e) => {
		const farray = new Array();
		if (rawData.length > 0) {
			for (let i = 0; i < rawData.length; i++) {
				let temp = Object.values(rawData[i].address);
				// console.log(temp, temp.includes(e.target.value));
				if (temp.includes(e.target.value)) {
					farray.push(temp[1]);
				}
			}
			let uniqueCities = [...new Set(farray)];
			setCityArray(uniqueCities);
		}
	};

	return (
		<div className={styles.container}>
			<Head>
				<title>Edvora Skill Accessment</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<div className={styles.mainLeft}>
				<div className={styles.selectContainer}>
					{/* <InputComponent /> */}
					<b
						style={{
							fontSize: "20px",
							margin: "10%",
						}}
						className={styles.headingText1}
					>
						Filters
					</b>
					<div className={styles.line} style={{ marginBottom: "10%" }}></div>
					<SelectInputComponent
						placeholder={"Products"}
						nameArray={formattedData}
						handleOnChangeSelectInputComponent={
							handleOnChangeSelectStateInputComponent
						}
					/>
					<SelectInputComponent
						placeholder={"State"}
						nameArray={statesArray}
						handleOnChangeSelectInputComponent={
							handleOnChangeSelectCityInputComponent
						}
					/>
					<SelectInputComponent placeholder={"City"} nameArray={cityArray} />
				</div>
			</div>
			<div className={styles.mainRight}>
				<h1 className={styles.headingText} style={{ marginLeft: "2%" }}>
					Edvora
				</h1>
				<h2 className={styles.headingText1} style={{ marginLeft: "2%" }}>
					Products
				</h2>

				{/* {formattedData.map((c, i) => (
					<ScrollbarComponent key={i} productName={c} />
				))} */}
				{_.zipWith(formattedData, apiValues, (c, b) => (
					<ScrollbarComponent key={c} productName={c} cardArray={b} />
				))}
			</div>
		</div>
	);
}
